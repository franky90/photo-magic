{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petet\\\\AI App\\\\ai-photo-magic\\\\src\\\\context\\\\CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  useEffect(() => {\n    // Load cart items from localStorage on mount\n    const storedCart = localStorage.getItem('tdPrintsCart');\n    if (storedCart) {\n      setCartItems(JSON.parse(storedCart));\n    }\n  }, []);\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      // Check if item already exists in cart\n      if (prevItems.some(cartItem => cartItem.id === item.id)) {\n        return prevItems;\n      }\n      const newItems = [...prevItems, item];\n      localStorage.setItem('tdPrintsCart', JSON.stringify(newItems));\n      return newItems;\n    });\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prevItems => {\n      const newItems = prevItems.filter(item => item.id !== itemId);\n      localStorage.setItem('tdPrintsCart', JSON.stringify(newItems));\n      return newItems;\n    });\n  };\n  const updateQuantity = (itemId, quantity) => {\n    setCartItems(prevItems => {\n      const newItems = prevItems.map(item => item.id === itemId ? {\n        ...item,\n        quantity: Math.max(1, Math.min(99, quantity))\n      } : item);\n      localStorage.setItem('tdPrintsCart', JSON.stringify(newItems));\n      return newItems;\n    });\n  };\n  const getTotalPrice = () => {\n    return cartItems.reduce((total, item) => {\n      if (!item.price) return total;\n\n      // Extract numeric value from price string (e.g., \"$29.99\" -> 29.99)\n      const priceValue = parseFloat(item.price.replace(/[^0-9.-]+/g, ''));\n      const quantity = item.quantity || 1;\n      return total + priceValue * quantity;\n    }, 0).toFixed(2);\n  };\n  const openCart = () => setIsCartOpen(true);\n  const closeCart = () => setIsCartOpen(false);\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    cartCount: cartItems.length,\n    isCartOpen,\n    openCart,\n    closeCart,\n    getTotalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"6Ez/crWbtpuJRnVnh76+wFoejno=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","undefined","CartProvider","children","_s","cartItems","setCartItems","isCartOpen","setIsCartOpen","storedCart","localStorage","getItem","JSON","parse","addToCart","item","prevItems","some","cartItem","id","newItems","setItem","stringify","removeFromCart","itemId","filter","updateQuantity","quantity","map","Math","max","min","getTotalPrice","reduce","total","price","priceValue","parseFloat","replace","toFixed","openCart","closeCart","value","cartCount","length","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/petet/AI App/ai-photo-magic/src/context/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface CartItem {\r\n  id: string;\r\n  name: string;\r\n  mainImage?: string;\r\n  quantity?: number;\r\n  price?: string;\r\n}\r\n\r\ninterface CartContextType {\r\n  cartItems: CartItem[];\r\n  addToCart: (item: CartItem) => void;\r\n  removeFromCart: (itemId: string) => void;\r\n  updateQuantity: (itemId: string, quantity: number) => void;\r\n  cartCount: number;\r\n  isCartOpen: boolean;\r\n  openCart: () => void;\r\n  closeCart: () => void;\r\n  getTotalPrice: () => string;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n  const [isCartOpen, setIsCartOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Load cart items from localStorage on mount\r\n    const storedCart = localStorage.getItem('tdPrintsCart');\r\n    if (storedCart) {\r\n      setCartItems(JSON.parse(storedCart));\r\n    }\r\n  }, []);\r\n\r\n  const addToCart = (item: CartItem) => {\r\n    setCartItems(prevItems => {\r\n      // Check if item already exists in cart\r\n      if (prevItems.some(cartItem => cartItem.id === item.id)) {\r\n        return prevItems;\r\n      }\r\n      \r\n      const newItems = [...prevItems, item];\r\n      localStorage.setItem('tdPrintsCart', JSON.stringify(newItems));\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (itemId: string) => {\r\n    setCartItems(prevItems => {\r\n      const newItems = prevItems.filter(item => item.id !== itemId);\r\n      localStorage.setItem('tdPrintsCart', JSON.stringify(newItems));\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  const updateQuantity = (itemId: string, quantity: number) => {\r\n    setCartItems(prevItems => {\r\n      const newItems = prevItems.map(item => \r\n        item.id === itemId \r\n          ? { ...item, quantity: Math.max(1, Math.min(99, quantity)) }\r\n          : item\r\n      );\r\n      localStorage.setItem('tdPrintsCart', JSON.stringify(newItems));\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return cartItems.reduce((total, item) => {\r\n      if (!item.price) return total;\r\n      \r\n      // Extract numeric value from price string (e.g., \"$29.99\" -> 29.99)\r\n      const priceValue = parseFloat(item.price.replace(/[^0-9.-]+/g, ''));\r\n      const quantity = item.quantity || 1;\r\n      \r\n      return total + (priceValue * quantity);\r\n    }, 0).toFixed(2);\r\n  };\r\n\r\n  const openCart = () => setIsCartOpen(true);\r\n  const closeCart = () => setIsCartOpen(false);\r\n\r\n  const value = {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    cartCount: cartItems.length,\r\n    isCartOpen,\r\n    openCart,\r\n    closeCart,\r\n    getTotalPrice\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}